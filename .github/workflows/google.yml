name: "Build and Push to Artifact Registry"

on:
  push:
    branches:
      - "main"
      - "qa"

env: # Define static environment variables here
  PROJECT_ID: "${{ secrets.PROJECT_ID }}"
  GAR_LOCATION: "${{ secrets.GAR_LOCATION }}"
  REPOSITORY: "${{ secrets.REPOSITORY }}"
  WORKLOAD_IDENTITY_PROVIDER: "${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}"
  GCP_SA_KEY: "${{ secrets.GCP_SA_KEY }}"
  SERVICE_ACCOUNT: "${{ secrets.GCP_SA_KEY }}"
  IMAGE: "static-site"
  ACTIONS_STEP_DEBUG: true

jobs:
  setup-build-publish:
    name: "Setup, Build, and Publish to Artifact Registry"
    runs-on: "ubuntu-latest"
    environment: "qa"

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2" # actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          token_format: "access_token"
          project_id: "${{ env.PROJECT_ID }}"
          service_account: "${{ env.SERVICE_ACCOUNT }}"
          workload_identity_provider: "${{ env.WORKLOAD_IDENTITY_PROVIDER }}"

      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v1"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      # Set branch-specific environment variables
      # - name: "Set branch-specific environment variables"
      #   run: |
      #     if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
      #       echo "BRANCH=main" >> $GITHUB_ENV
      #     elif [[ "${GITHUB_REF}" == "refs/heads/qa" ]]; then
      #       echo "BRANCH=qa" >> $GITHUB_ENV
      #     fi

      # Build the Docker image
      - name: "Build and push Docker container"
        run: |-
          DOCKER_TAG="asia-northeast3-docker.pkg.dev/tinker-modelcut/tinker-modelcut-backend/${IMAGE}:${GITHUB_SHA}"

          docker build \
            --file api/Dockerfile \
            --tag "${DOCKER_TAG}" \
            --build-arg GITHUB_SHA="${GITHUB_SHA}" \
            --build-arg GITHUB_REF="${GITHUB_REF}" \
            ./api

          docker push "${DOCKER_TAG}"
