name: "Build and Push to Artifact Registry"

on:
  push:
    branches:
      - "main"
      - "qa"

env: # Define static environment variables here
  PROJECT_ID: "${{ secrets.PROJECT_ID }}"
  GAR_LOCATION: "${{ secrets.GAR_LOCATION }}"
  REPOSITORY: "${{ secrets.REPOSITORY }}"
  WORKLOAD_IDENTITY_PROVIDER: "${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}"
  GCP_CREDENTIALS: "${{ secrets.GCP_CREDENTIALS }}"
  SERVICE_ACCOUNT: "${{ secrets.SERVICE_ACCOUNT }}"
  IMAGE_NAME: "static-site"
  ACTIONS_STEP_DEBUG: true

jobs:
  setup-build-publish:
    name: "Setup, Build, and Publish to Artifact Registry"
    runs-on: "ubuntu-latest"
    environment: "qa"

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ env.GCP_CREDENTIALS }}

      # - name: "Checkout"
      #   uses: "actions/checkout@v4" # actions/checkout@v4

      # # Configure Workload Identity Federation and generate an access token.
      # - id: "auth"
      #   name: "Authenticate to Google Cloud"
      #   uses: "google-github-actions/auth@v1" # google-github-actions/auth@v2
      #   with:
      #     token_format: "access_token"
      #     workload_identity_provider: "${{ env.WORKLOAD_IDENTITY_PROVIDER }}"
      #     # project_id: "${{ env.PROJECT_ID }}"
      #     service_account: "${{ env.SERVICE_ACCOUNT }}"

      # # Authenticate Docker to Google Cloud Artifact Registry
      # - name: "Docker Auth"
      #   uses: "docker/login-action@v3" # docker/login-action@v3
      #   with:
      #     username: oauth2accesstoken
      #     password: ${{ steps.auth.outputs.access_token }}
      #     registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev

      # Set branch-specific environment variables
      # - name: "Set branch-specific environment variables"
      #   run: |
      #     if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
      #       echo "BRANCH=main" >> $GITHUB_ENV
      #     elif [[ "${GITHUB_REF}" == "refs/heads/qa" ]]; then
      #       echo "BRANCH=qa" >> $GITHUB_ENV
      #     fi

      # Build the Docker image
      # - name: "Build and push Docker container"
      #   run: |-
      #     DOCKER_TAG="asia-northeast3-docker.pkg.dev/tinker-modelcut/tinker-modelcut-backend/hi:1"

      #     docker build \
      #       --file api/Dockerfile \
      #       --tag "${DOCKER_TAG}" \
      #       --build-arg GITHUB_SHA="${GITHUB_SHA}" \
      #       --build-arg GITHUB_REF="${GITHUB_REF}" \
      #       ./api

      #     docker push "${DOCKER_TAG}"

      # Build the Docker image
      - name: "Build and push Docker container"
        run: |-
          DOCKER_TAG="${GAR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/${IMAGE_NAME}:${GITHUB_SHA}"

          docker build \
            --file api/Dockerfile \
            --tag "${DOCKER_TAG}" \
            --build-arg GITHUB_SHA="${GITHUB_SHA}" \
            --build-arg GITHUB_REF="${GITHUB_REF}" \
            ./api

          docker push "${DOCKER_TAG}"
